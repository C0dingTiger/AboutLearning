箭头函数相当于匿名函数，并且简化了函数定义。箭头函数有两种格式，一种只包含一个表达式，连{ ... }和return都省略掉了。
eg：
	x => x * x        

	等价于

	function (x) {
	    return x * x;
	}



还有一种可以包含多条语句，这时候就不能省略{ ... }和return：
eg：
	x => {
	    if (x > 0) {
	        return x * x;
	    }
	    else {
	        return - x * x;
	    }
	}

如果参数不是一个，就需要用括号()括起来：
eg：

	// 两个参数:
	(x, y) => x * x + y * y

	// 无参数:
	() => 3.14

	// 可变参数:
	(x, y, ...rest) => {
	    var i, sum = x + y;
	    for (i=0; i<rest.length; i++) {
	        sum += rest[i];
	    }
	    return sum;
	}

如果要返回一个对象，就要注意，如果是单表达式，这么写的话会报错：
eg：
	// SyntaxError:
	x => { foo: x }

	因为和函数体的{ ... }有语法冲突，所以要改为：

	// ok:
	x => ({ foo: x })


This 用法：

function中的this指向的是使用时所在的对象，

而箭头函数中的this指向定义时所在的对象